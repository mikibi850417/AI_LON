'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import SubscriptionPayment from '@/lib/payment/SubscriptionPayment';
import { supabase } from '@/lib/supabaseClient';

export default function SubscriptionPage() {
    const router = useRouter();
    const [user, setUser] = useState<any>(null);
    const [error, setError] = useState<string | null>(null);

    useEffect(() => {
        checkUser();
    }, []);

    const checkUser = async () => {
        try {
            const { data: { user } } = await supabase.auth.getUser();
            if (!user) {
                router.push('/auth/login');
                return;
            }
            setUser(user);
        } catch (error) {
            console.error('Error checking user:', error);
            router.push('/auth/login');
        }
    };

    const handlePaymentSuccess = async (orderId: string) => {
        // Redirect to dashboard after successful payment
        router.push('/dashboard');
    };

    const handlePaymentError = (error: string) => {
        setError(error);
    };

    if (!user) {
        return null; // Or loading spinner
    }

    return (
        <SubscriptionPayment
            customerId={user.id}
            customerEmail={user.email}
            pricePerMonth={9900}
            onSuccess={handlePaymentSuccess}
            onError={handlePaymentError}
            buttonColor="#2ecc71"
            buttonHoverColor="#27ae60"
        />
    );
}
